[tool.poetry]
name = "stb-automator"
version = "0.0.0"
description = "A library for automated control & testing of set-top boxes"
authors = ["Eugene Triguba <eugenetriguba@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/eugenetriguba/stb-automator"
keywords = [
    "set-top box",
    "test automation",
    "opencv",
    "tesseract",
    "LIRC",
    "gstreamer"
]
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "stb" }]

[tool.taskipy.tasks]
lint = "pre-commit run --all"
test = "poetry run task test_unit"
test_unit = "poetry run pytest -vvv --cov=stb/ --cov-report term-missing tests/"
test_all = "export STB_RUN_LONG_TESTS=true && poetry run task test && unset STB_RUN_LONG_TESTS"
commit = "cz commit"

[tool.poetry.scripts]
stb = 'stb.cli.runner:stb'

[tool.poetry.dependencies]
python = "^3.6"
click = "^7.1.2"
opencv-python = "^4.4.0"
config-file = { version = "^0.12.0", extras = ["toml"] }
PyGObject = "^3.38.0"
numpy = "^1.19.4"
pytesseract = "^0.3.6"
lirc = "^0.2.0"

[tool.poetry.dev-dependencies]
pre-commit = { version = "^2.9.0", python = "^3.6.1" }
flake8 = "^3.8.2"
isort = "^5.6.4"
seed-isort-config = { version = "^2.1.1", python = "^3.6.1" }
pytest = "^6.2.0"
pytest-cov = "^2.10.0"
bump2version = "^1.0.0"
taskipy = "^1.5.1"
black = { version = "^19.10b0", python = "^3.6.1" }
sphinx = "^3.0.3"
sphinx_rtd_theme = "^0.5.0"

[tool.black]
target_version = ['py36']
include = '\.pyi?$'

[tool.isort]
profile = "black"
known_first_party = ["stb"]
known_third_party = ["click", "config_file", "gi", "numpy", "pytest"]

[build-system]
requires = ["poetry>=1.1", "wheel", "setuptools"]
build-backend = "poetry.masonry.api"
